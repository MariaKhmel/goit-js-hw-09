{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UA6B/B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAlCPN,EAAKC,KAAKa,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAMC,iBACN,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWnB,EAAKC,KAErC,GAAIgB,EAAMG,MAAQ,GAAKF,EAAKE,MAAQ,EAClC,OAAOtB,EAAAuB,OAAOC,QAAQ,iCAGxBT,YAAW,KACT,IAAK,IAAIU,EAAI,EAAGA,EAAIJ,EAAOC,MAAOG,GAAK,EACrCnB,EAAcmB,EAAI,EAAGL,EAAKE,MAAQG,GAC/BC,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,KACjBR,EAAAuB,OAAOI,QAAQ,uBAAqBpB,QAAiBC,SAAYoB,OAElE,EAAOrB,WAAUC,WAChBR,EAAAuB,OAAMM,QAAC,sBAAStB,QAA8BC,WAGnDW,EAAMG","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit (event) {\n  event.preventDefault();\n  const { delay, step, amount } = refs.form;\n\n  if (delay.value < 0 || step.value < 0) {\n    return Notify.warning(`Enter positive value, please!`)\n  }\n\n  setTimeout(() => {\n    for (let i = 0; i < amount.value; i += 1) {\n      createPromise(i + 1, step.value * i)\n        .then(({ position, delay }) =>\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        )\n        .catch(({ position, delay }) =>\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        );\n    }\n  }, delay.value);\n}\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","step","amount","value","Notify","warning","i","then","success","catch","failure"],"version":3,"file":"03-promises.cfca98e6.js.map"}